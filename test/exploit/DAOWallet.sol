// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

contract DAOWallet {
  mapping(address => uint) public balances;

  function deposit() public payable {
    balances[msg.sender] += (msg.value);
  }

  function balanceOf(address _who) public view returns (uint balance) {
    return balances[_who];
  }

  function withdraw(uint _amount) public {
    require(balances[msg.sender] >= _amount, "INSUFFICIENT_FUNDS");
    (bool result,) = msg.sender.call{value:_amount}("");
    require(result, "WITHDRAW_FAILED");

    // this is the attack- decrement after withdraw
    balances[msg.sender] -= _amount;
  }

  receive() external payable {}
}